// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: target/tmp/vector_tile.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package vector_tile;

@kotlin.jvm.JvmName("-initializetile")
public inline fun tile(block: vector_tile.TileKt.Dsl.() -> kotlin.Unit): vector_tile.VectorTile.Tile =
  vector_tile.TileKt.Dsl._create(vector_tile.VectorTile.Tile.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `vector_tile.Tile`
 */
public object TileKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: vector_tile.VectorTile.Tile.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: vector_tile.VectorTile.Tile.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): vector_tile.VectorTile.Tile = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class LayersProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * `repeated .vector_tile.Tile.Layer layers = 3;`
     */
     public val layers: com.google.protobuf.kotlin.DslList<vector_tile.VectorTile.Tile.Layer, LayersProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.layersList
      )
    /**
     * `repeated .vector_tile.Tile.Layer layers = 3;`
     * @param value The layers to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addLayers")
    public fun com.google.protobuf.kotlin.DslList<vector_tile.VectorTile.Tile.Layer, LayersProxy>.add(value: vector_tile.VectorTile.Tile.Layer) {
      _builder.addLayers(value)
    }
    /**
     * `repeated .vector_tile.Tile.Layer layers = 3;`
     * @param value The layers to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignLayers")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<vector_tile.VectorTile.Tile.Layer, LayersProxy>.plusAssign(value: vector_tile.VectorTile.Tile.Layer) {
      add(value)
    }
    /**
     * `repeated .vector_tile.Tile.Layer layers = 3;`
     * @param values The layers to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllLayers")
    public fun com.google.protobuf.kotlin.DslList<vector_tile.VectorTile.Tile.Layer, LayersProxy>.addAll(values: kotlin.collections.Iterable<vector_tile.VectorTile.Tile.Layer>) {
      _builder.addAllLayers(values)
    }
    /**
     * `repeated .vector_tile.Tile.Layer layers = 3;`
     * @param values The layers to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllLayers")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<vector_tile.VectorTile.Tile.Layer, LayersProxy>.plusAssign(values: kotlin.collections.Iterable<vector_tile.VectorTile.Tile.Layer>) {
      addAll(values)
    }
    /**
     * `repeated .vector_tile.Tile.Layer layers = 3;`
     * @param index The index to set the value at.
     * @param value The layers to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setLayers")
    public operator fun com.google.protobuf.kotlin.DslList<vector_tile.VectorTile.Tile.Layer, LayersProxy>.set(index: kotlin.Int, value: vector_tile.VectorTile.Tile.Layer) {
      _builder.setLayers(index, value)
    }
    /**
     * `repeated .vector_tile.Tile.Layer layers = 3;`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearLayers")
    public fun com.google.protobuf.kotlin.DslList<vector_tile.VectorTile.Tile.Layer, LayersProxy>.clear() {
      _builder.clearLayers()
    }

    @Suppress("UNCHECKED_CAST")
    @kotlin.jvm.JvmSynthetic
public operator fun <T : kotlin.Any> get(extension: com.google.protobuf.ExtensionLite<vector_tile.VectorTile.Tile, T>): T {
      return if (extension.isRepeated) {
        get(extension as com.google.protobuf.ExtensionLite<vector_tile.VectorTile.Tile, kotlin.collections.List<*>>) as T
      } else {
        _builder.getExtension(extension)
      }
    }

    @kotlin.jvm.JvmSynthetic
@kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @kotlin.jvm.JvmName("-getRepeatedExtension")
    public operator fun <E : kotlin.Any> get(
      extension: com.google.protobuf.ExtensionLite<vector_tile.VectorTile.Tile, kotlin.collections.List<E>>
    ): com.google.protobuf.kotlin.ExtensionList<E, vector_tile.VectorTile.Tile> {
      return com.google.protobuf.kotlin.ExtensionList(extension, _builder.getExtension(extension))
    }

    @kotlin.jvm.JvmSynthetic
public operator fun contains(extension: com.google.protobuf.ExtensionLite<vector_tile.VectorTile.Tile, *>): Boolean {
      return _builder.hasExtension(extension)
    }

    @kotlin.jvm.JvmSynthetic
public fun clear(extension: com.google.protobuf.ExtensionLite<vector_tile.VectorTile.Tile, *>) {
      _builder.clearExtension(extension)
    }

    @kotlin.jvm.JvmSynthetic
public fun <T : kotlin.Any> setExtension(extension: com.google.protobuf.ExtensionLite<vector_tile.VectorTile.Tile, T>, value: T) {
      _builder.setExtension(extension, value)
    }

    @kotlin.jvm.JvmSynthetic
@Suppress("NOTHING_TO_INLINE")
    public inline operator fun <T : Comparable<T>> set(
      extension: com.google.protobuf.ExtensionLite<vector_tile.VectorTile.Tile, T>,
      value: T
    ) {
      setExtension(extension, value)
    }

    @kotlin.jvm.JvmSynthetic
@Suppress("NOTHING_TO_INLINE")
    public inline operator fun set(
      extension: com.google.protobuf.ExtensionLite<vector_tile.VectorTile.Tile, com.google.protobuf.ByteString>,
      value: com.google.protobuf.ByteString
    ) {
      setExtension(extension, value)
    }

    @kotlin.jvm.JvmSynthetic
@Suppress("NOTHING_TO_INLINE")
    public inline operator fun <T : com.google.protobuf.MessageLite> set(
      extension: com.google.protobuf.ExtensionLite<vector_tile.VectorTile.Tile, T>,
      value: T
    ) {
      setExtension(extension, value)
    }

    @kotlin.jvm.JvmSynthetic
public fun <E : kotlin.Any> com.google.protobuf.kotlin.ExtensionList<E, vector_tile.VectorTile.Tile>.add(value: E) {
      _builder.addExtension(this.extension, value)
    }

    @kotlin.jvm.JvmSynthetic
@Suppress("NOTHING_TO_INLINE")
    public inline operator fun <E : kotlin.Any> com.google.protobuf.kotlin.ExtensionList<E, vector_tile.VectorTile.Tile>.plusAssign(value: E) {
      add(value)
    }

    @kotlin.jvm.JvmSynthetic
public fun <E : kotlin.Any> com.google.protobuf.kotlin.ExtensionList<E, vector_tile.VectorTile.Tile>.addAll(values: Iterable<E>) {
      for (value in values) {
        add(value)
      }
    }

    @kotlin.jvm.JvmSynthetic
@Suppress("NOTHING_TO_INLINE")
    public inline operator fun <E : kotlin.Any> com.google.protobuf.kotlin.ExtensionList<E, vector_tile.VectorTile.Tile>.plusAssign(values: Iterable<E>) {
      addAll(values)
    }

    @kotlin.jvm.JvmSynthetic
public operator fun <E : kotlin.Any> com.google.protobuf.kotlin.ExtensionList<E, vector_tile.VectorTile.Tile>.set(index: Int, value: E) {
      _builder.setExtension(this.extension, index, value)
    }

    @kotlin.jvm.JvmSynthetic
@Suppress("NOTHING_TO_INLINE")
    public inline fun com.google.protobuf.kotlin.ExtensionList<*, vector_tile.VectorTile.Tile>.clear() {
      clear(extension)
    }

  }
  @kotlin.jvm.JvmName("-initializevalue")
  public inline fun value(block: vector_tile.TileKt.ValueKt.Dsl.() -> kotlin.Unit): vector_tile.VectorTile.Tile.Value =
    vector_tile.TileKt.ValueKt.Dsl._create(vector_tile.VectorTile.Tile.Value.newBuilder()).apply { block() }._build()
  /**
   * ```
   * Variant type encoding
   * The use of values is described in section 4.1 of the specification
   * ```
   *
   * Protobuf type `vector_tile.Tile.Value`
   */
  public object ValueKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: vector_tile.VectorTile.Tile.Value.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
        internal fun _create(builder: vector_tile.VectorTile.Tile.Value.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
      internal fun _build(): vector_tile.VectorTile.Tile.Value = _builder.build()

      /**
       * ```
       * Exactly one of these values must be present in a valid message
       * ```
       *
       * `optional string string_value = 1;`
       */
      public var stringValue: kotlin.String
        @JvmName("getStringValue")
        get() = _builder.stringValue
        @JvmName("setStringValue")
        set(value) {
          _builder.stringValue = value
        }
      /**
       * ```
       * Exactly one of these values must be present in a valid message
       * ```
       *
       * `optional string string_value = 1;`
       */
      public fun clearStringValue() {
        _builder.clearStringValue()
      }
      /**
       * ```
       * Exactly one of these values must be present in a valid message
       * ```
       *
       * `optional string string_value = 1;`
       * @return Whether the stringValue field is set.
       */
      public fun hasStringValue(): kotlin.Boolean {
        return _builder.hasStringValue()
      }

      /**
       * `optional float float_value = 2;`
       */
      public var floatValue: kotlin.Float
        @JvmName("getFloatValue")
        get() = _builder.floatValue
        @JvmName("setFloatValue")
        set(value) {
          _builder.floatValue = value
        }
      /**
       * `optional float float_value = 2;`
       */
      public fun clearFloatValue() {
        _builder.clearFloatValue()
      }
      /**
       * `optional float float_value = 2;`
       * @return Whether the floatValue field is set.
       */
      public fun hasFloatValue(): kotlin.Boolean {
        return _builder.hasFloatValue()
      }

      /**
       * `optional double double_value = 3;`
       */
      public var doubleValue: kotlin.Double
        @JvmName("getDoubleValue")
        get() = _builder.doubleValue
        @JvmName("setDoubleValue")
        set(value) {
          _builder.doubleValue = value
        }
      /**
       * `optional double double_value = 3;`
       */
      public fun clearDoubleValue() {
        _builder.clearDoubleValue()
      }
      /**
       * `optional double double_value = 3;`
       * @return Whether the doubleValue field is set.
       */
      public fun hasDoubleValue(): kotlin.Boolean {
        return _builder.hasDoubleValue()
      }

      /**
       * `optional int64 int_value = 4;`
       */
      public var intValue: kotlin.Long
        @JvmName("getIntValue")
        get() = _builder.intValue
        @JvmName("setIntValue")
        set(value) {
          _builder.intValue = value
        }
      /**
       * `optional int64 int_value = 4;`
       */
      public fun clearIntValue() {
        _builder.clearIntValue()
      }
      /**
       * `optional int64 int_value = 4;`
       * @return Whether the intValue field is set.
       */
      public fun hasIntValue(): kotlin.Boolean {
        return _builder.hasIntValue()
      }

      /**
       * `optional uint64 uint_value = 5;`
       */
      public var uintValue: kotlin.Long
        @JvmName("getUintValue")
        get() = _builder.uintValue
        @JvmName("setUintValue")
        set(value) {
          _builder.uintValue = value
        }
      /**
       * `optional uint64 uint_value = 5;`
       */
      public fun clearUintValue() {
        _builder.clearUintValue()
      }
      /**
       * `optional uint64 uint_value = 5;`
       * @return Whether the uintValue field is set.
       */
      public fun hasUintValue(): kotlin.Boolean {
        return _builder.hasUintValue()
      }

      /**
       * `optional sint64 sint_value = 6;`
       */
      public var sintValue: kotlin.Long
        @JvmName("getSintValue")
        get() = _builder.sintValue
        @JvmName("setSintValue")
        set(value) {
          _builder.sintValue = value
        }
      /**
       * `optional sint64 sint_value = 6;`
       */
      public fun clearSintValue() {
        _builder.clearSintValue()
      }
      /**
       * `optional sint64 sint_value = 6;`
       * @return Whether the sintValue field is set.
       */
      public fun hasSintValue(): kotlin.Boolean {
        return _builder.hasSintValue()
      }

      /**
       * `optional bool bool_value = 7;`
       */
      public var boolValue: kotlin.Boolean
        @JvmName("getBoolValue")
        get() = _builder.boolValue
        @JvmName("setBoolValue")
        set(value) {
          _builder.boolValue = value
        }
      /**
       * `optional bool bool_value = 7;`
       */
      public fun clearBoolValue() {
        _builder.clearBoolValue()
      }
      /**
       * `optional bool bool_value = 7;`
       * @return Whether the boolValue field is set.
       */
      public fun hasBoolValue(): kotlin.Boolean {
        return _builder.hasBoolValue()
      }
      @Suppress("UNCHECKED_CAST")
      @kotlin.jvm.JvmSynthetic
public operator fun <T : kotlin.Any> get(extension: com.google.protobuf.ExtensionLite<vector_tile.VectorTile.Tile.Value, T>): T {
        return if (extension.isRepeated) {
          get(extension as com.google.protobuf.ExtensionLite<vector_tile.VectorTile.Tile.Value, kotlin.collections.List<*>>) as T
        } else {
          _builder.getExtension(extension)
        }
      }

      @kotlin.jvm.JvmSynthetic
@kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      @kotlin.jvm.JvmName("-getRepeatedExtension")
      public operator fun <E : kotlin.Any> get(
        extension: com.google.protobuf.ExtensionLite<vector_tile.VectorTile.Tile.Value, kotlin.collections.List<E>>
      ): com.google.protobuf.kotlin.ExtensionList<E, vector_tile.VectorTile.Tile.Value> {
        return com.google.protobuf.kotlin.ExtensionList(extension, _builder.getExtension(extension))
      }

      @kotlin.jvm.JvmSynthetic
public operator fun contains(extension: com.google.protobuf.ExtensionLite<vector_tile.VectorTile.Tile.Value, *>): Boolean {
        return _builder.hasExtension(extension)
      }

      @kotlin.jvm.JvmSynthetic
public fun clear(extension: com.google.protobuf.ExtensionLite<vector_tile.VectorTile.Tile.Value, *>) {
        _builder.clearExtension(extension)
      }

      @kotlin.jvm.JvmSynthetic
public fun <T : kotlin.Any> setExtension(extension: com.google.protobuf.ExtensionLite<vector_tile.VectorTile.Tile.Value, T>, value: T) {
        _builder.setExtension(extension, value)
      }

      @kotlin.jvm.JvmSynthetic
@Suppress("NOTHING_TO_INLINE")
      public inline operator fun <T : Comparable<T>> set(
        extension: com.google.protobuf.ExtensionLite<vector_tile.VectorTile.Tile.Value, T>,
        value: T
      ) {
        setExtension(extension, value)
      }

      @kotlin.jvm.JvmSynthetic
@Suppress("NOTHING_TO_INLINE")
      public inline operator fun set(
        extension: com.google.protobuf.ExtensionLite<vector_tile.VectorTile.Tile.Value, com.google.protobuf.ByteString>,
        value: com.google.protobuf.ByteString
      ) {
        setExtension(extension, value)
      }

      @kotlin.jvm.JvmSynthetic
@Suppress("NOTHING_TO_INLINE")
      public inline operator fun <T : com.google.protobuf.MessageLite> set(
        extension: com.google.protobuf.ExtensionLite<vector_tile.VectorTile.Tile.Value, T>,
        value: T
      ) {
        setExtension(extension, value)
      }

      @kotlin.jvm.JvmSynthetic
public fun <E : kotlin.Any> com.google.protobuf.kotlin.ExtensionList<E, vector_tile.VectorTile.Tile.Value>.add(value: E) {
        _builder.addExtension(this.extension, value)
      }

      @kotlin.jvm.JvmSynthetic
@Suppress("NOTHING_TO_INLINE")
      public inline operator fun <E : kotlin.Any> com.google.protobuf.kotlin.ExtensionList<E, vector_tile.VectorTile.Tile.Value>.plusAssign(value: E) {
        add(value)
      }

      @kotlin.jvm.JvmSynthetic
public fun <E : kotlin.Any> com.google.protobuf.kotlin.ExtensionList<E, vector_tile.VectorTile.Tile.Value>.addAll(values: Iterable<E>) {
        for (value in values) {
          add(value)
        }
      }

      @kotlin.jvm.JvmSynthetic
@Suppress("NOTHING_TO_INLINE")
      public inline operator fun <E : kotlin.Any> com.google.protobuf.kotlin.ExtensionList<E, vector_tile.VectorTile.Tile.Value>.plusAssign(values: Iterable<E>) {
        addAll(values)
      }

      @kotlin.jvm.JvmSynthetic
public operator fun <E : kotlin.Any> com.google.protobuf.kotlin.ExtensionList<E, vector_tile.VectorTile.Tile.Value>.set(index: Int, value: E) {
        _builder.setExtension(this.extension, index, value)
      }

      @kotlin.jvm.JvmSynthetic
@Suppress("NOTHING_TO_INLINE")
      public inline fun com.google.protobuf.kotlin.ExtensionList<*, vector_tile.VectorTile.Tile.Value>.clear() {
        clear(extension)
      }

    }
  }
  @kotlin.jvm.JvmName("-initializefeature")
  public inline fun feature(block: vector_tile.TileKt.FeatureKt.Dsl.() -> kotlin.Unit): vector_tile.VectorTile.Tile.Feature =
    vector_tile.TileKt.FeatureKt.Dsl._create(vector_tile.VectorTile.Tile.Feature.newBuilder()).apply { block() }._build()
  /**
   * ```
   * Features are described in section 4.2 of the specification
   * ```
   *
   * Protobuf type `vector_tile.Tile.Feature`
   */
  public object FeatureKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: vector_tile.VectorTile.Tile.Feature.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
        internal fun _create(builder: vector_tile.VectorTile.Tile.Feature.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
      internal fun _build(): vector_tile.VectorTile.Tile.Feature = _builder.build()

      /**
       * `optional uint64 id = 1 [default = 0];`
       */
      public var id: kotlin.Long
        @JvmName("getId")
        get() = _builder.id
        @JvmName("setId")
        set(value) {
          _builder.id = value
        }
      /**
       * `optional uint64 id = 1 [default = 0];`
       */
      public fun clearId() {
        _builder.clearId()
      }
      /**
       * `optional uint64 id = 1 [default = 0];`
       * @return Whether the id field is set.
       */
      public fun hasId(): kotlin.Boolean {
        return _builder.hasId()
      }

      /**
       * An uninstantiable, behaviorless type to represent the field in
       * generics.
       */
      @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      public class TagsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
      /**
       * ```
       * Tags of this feature are encoded as repeated pairs of
       * integers.
       * A detailed description of tags is located in sections
       * 4.2 and 4.4 of the specification
       * ```
       *
       * `repeated uint32 tags = 2 [packed = true];`
       */
       public val tags: com.google.protobuf.kotlin.DslList<kotlin.Int, TagsProxy>
        @kotlin.jvm.JvmSynthetic
        get() = com.google.protobuf.kotlin.DslList(
          _builder.tagsList
        )
      /**
       * ```
       * Tags of this feature are encoded as repeated pairs of
       * integers.
       * A detailed description of tags is located in sections
       * 4.2 and 4.4 of the specification
       * ```
       *
       * `repeated uint32 tags = 2 [packed = true];`
       * @param value The tags to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addTags")
      public fun com.google.protobuf.kotlin.DslList<kotlin.Int, TagsProxy>.add(value: kotlin.Int) {
        _builder.addTags(value)
      }/**
       * ```
       * Tags of this feature are encoded as repeated pairs of
       * integers.
       * A detailed description of tags is located in sections
       * 4.2 and 4.4 of the specification
       * ```
       *
       * `repeated uint32 tags = 2 [packed = true];`
       * @param value The tags to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignTags")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Int, TagsProxy>.plusAssign(value: kotlin.Int) {
        add(value)
      }/**
       * ```
       * Tags of this feature are encoded as repeated pairs of
       * integers.
       * A detailed description of tags is located in sections
       * 4.2 and 4.4 of the specification
       * ```
       *
       * `repeated uint32 tags = 2 [packed = true];`
       * @param values The tags to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addAllTags")
      public fun com.google.protobuf.kotlin.DslList<kotlin.Int, TagsProxy>.addAll(values: kotlin.collections.Iterable<kotlin.Int>) {
        _builder.addAllTags(values)
      }/**
       * ```
       * Tags of this feature are encoded as repeated pairs of
       * integers.
       * A detailed description of tags is located in sections
       * 4.2 and 4.4 of the specification
       * ```
       *
       * `repeated uint32 tags = 2 [packed = true];`
       * @param values The tags to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignAllTags")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Int, TagsProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.Int>) {
        addAll(values)
      }/**
       * ```
       * Tags of this feature are encoded as repeated pairs of
       * integers.
       * A detailed description of tags is located in sections
       * 4.2 and 4.4 of the specification
       * ```
       *
       * `repeated uint32 tags = 2 [packed = true];`
       * @param index The index to set the value at.
       * @param value The tags to set.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("setTags")
      public operator fun com.google.protobuf.kotlin.DslList<kotlin.Int, TagsProxy>.set(index: kotlin.Int, value: kotlin.Int) {
        _builder.setTags(index, value)
      }/**
       * ```
       * Tags of this feature are encoded as repeated pairs of
       * integers.
       * A detailed description of tags is located in sections
       * 4.2 and 4.4 of the specification
       * ```
       *
       * `repeated uint32 tags = 2 [packed = true];`
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("clearTags")
      public fun com.google.protobuf.kotlin.DslList<kotlin.Int, TagsProxy>.clear() {
        _builder.clearTags()
      }
      /**
       * ```
       * The type of geometry stored in this feature.
       * ```
       *
       * `optional .vector_tile.Tile.GeomType type = 3 [default = UNKNOWN];`
       */
      public var type: vector_tile.VectorTile.Tile.GeomType
        @JvmName("getType")
        get() = _builder.type
        @JvmName("setType")
        set(value) {
          _builder.type = value
        }
      /**
       * ```
       * The type of geometry stored in this feature.
       * ```
       *
       * `optional .vector_tile.Tile.GeomType type = 3 [default = UNKNOWN];`
       */
      public fun clearType() {
        _builder.clearType()
      }
      /**
       * ```
       * The type of geometry stored in this feature.
       * ```
       *
       * `optional .vector_tile.Tile.GeomType type = 3 [default = UNKNOWN];`
       * @return Whether the type field is set.
       */
      public fun hasType(): kotlin.Boolean {
        return _builder.hasType()
      }

      /**
       * An uninstantiable, behaviorless type to represent the field in
       * generics.
       */
      @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      public class GeometryProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
      /**
       * ```
       * Contains a stream of commands and parameters (vertices).
       * A detailed description on geometry encoding is located in 
       * section 4.3 of the specification.
       * ```
       *
       * `repeated uint32 geometry = 4 [packed = true];`
       */
       public val geometry: com.google.protobuf.kotlin.DslList<kotlin.Int, GeometryProxy>
        @kotlin.jvm.JvmSynthetic
        get() = com.google.protobuf.kotlin.DslList(
          _builder.geometryList
        )
      /**
       * ```
       * Contains a stream of commands and parameters (vertices).
       * A detailed description on geometry encoding is located in 
       * section 4.3 of the specification.
       * ```
       *
       * `repeated uint32 geometry = 4 [packed = true];`
       * @param value The geometry to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addGeometry")
      public fun com.google.protobuf.kotlin.DslList<kotlin.Int, GeometryProxy>.add(value: kotlin.Int) {
        _builder.addGeometry(value)
      }/**
       * ```
       * Contains a stream of commands and parameters (vertices).
       * A detailed description on geometry encoding is located in 
       * section 4.3 of the specification.
       * ```
       *
       * `repeated uint32 geometry = 4 [packed = true];`
       * @param value The geometry to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignGeometry")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Int, GeometryProxy>.plusAssign(value: kotlin.Int) {
        add(value)
      }/**
       * ```
       * Contains a stream of commands and parameters (vertices).
       * A detailed description on geometry encoding is located in 
       * section 4.3 of the specification.
       * ```
       *
       * `repeated uint32 geometry = 4 [packed = true];`
       * @param values The geometry to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addAllGeometry")
      public fun com.google.protobuf.kotlin.DslList<kotlin.Int, GeometryProxy>.addAll(values: kotlin.collections.Iterable<kotlin.Int>) {
        _builder.addAllGeometry(values)
      }/**
       * ```
       * Contains a stream of commands and parameters (vertices).
       * A detailed description on geometry encoding is located in 
       * section 4.3 of the specification.
       * ```
       *
       * `repeated uint32 geometry = 4 [packed = true];`
       * @param values The geometry to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignAllGeometry")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Int, GeometryProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.Int>) {
        addAll(values)
      }/**
       * ```
       * Contains a stream of commands and parameters (vertices).
       * A detailed description on geometry encoding is located in 
       * section 4.3 of the specification.
       * ```
       *
       * `repeated uint32 geometry = 4 [packed = true];`
       * @param index The index to set the value at.
       * @param value The geometry to set.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("setGeometry")
      public operator fun com.google.protobuf.kotlin.DslList<kotlin.Int, GeometryProxy>.set(index: kotlin.Int, value: kotlin.Int) {
        _builder.setGeometry(index, value)
      }/**
       * ```
       * Contains a stream of commands and parameters (vertices).
       * A detailed description on geometry encoding is located in 
       * section 4.3 of the specification.
       * ```
       *
       * `repeated uint32 geometry = 4 [packed = true];`
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("clearGeometry")
      public fun com.google.protobuf.kotlin.DslList<kotlin.Int, GeometryProxy>.clear() {
        _builder.clearGeometry()
      }}
  }
  @kotlin.jvm.JvmName("-initializelayer")
  public inline fun layer(block: vector_tile.TileKt.LayerKt.Dsl.() -> kotlin.Unit): vector_tile.VectorTile.Tile.Layer =
    vector_tile.TileKt.LayerKt.Dsl._create(vector_tile.VectorTile.Tile.Layer.newBuilder()).apply { block() }._build()
  /**
   * ```
   * Layers are described in section 4.1 of the specification
   * ```
   *
   * Protobuf type `vector_tile.Tile.Layer`
   */
  public object LayerKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: vector_tile.VectorTile.Tile.Layer.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
        internal fun _create(builder: vector_tile.VectorTile.Tile.Layer.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
      internal fun _build(): vector_tile.VectorTile.Tile.Layer = _builder.build()

      /**
       * ```
       * Any compliant implementation must first read the version
       * number encoded in this message and choose the correct
       * implementation for this version number before proceeding to
       * decode other parts of this message.
       * ```
       *
       * `required uint32 version = 15 [default = 1];`
       */
      public var version: kotlin.Int
        @JvmName("getVersion")
        get() = _builder.version
        @JvmName("setVersion")
        set(value) {
          _builder.version = value
        }
      /**
       * ```
       * Any compliant implementation must first read the version
       * number encoded in this message and choose the correct
       * implementation for this version number before proceeding to
       * decode other parts of this message.
       * ```
       *
       * `required uint32 version = 15 [default = 1];`
       */
      public fun clearVersion() {
        _builder.clearVersion()
      }
      /**
       * ```
       * Any compliant implementation must first read the version
       * number encoded in this message and choose the correct
       * implementation for this version number before proceeding to
       * decode other parts of this message.
       * ```
       *
       * `required uint32 version = 15 [default = 1];`
       * @return Whether the version field is set.
       */
      public fun hasVersion(): kotlin.Boolean {
        return _builder.hasVersion()
      }

      /**
       * `required string name = 1;`
       */
      public var name: kotlin.String
        @JvmName("getName")
        get() = _builder.name
        @JvmName("setName")
        set(value) {
          _builder.name = value
        }
      /**
       * `required string name = 1;`
       */
      public fun clearName() {
        _builder.clearName()
      }
      /**
       * `required string name = 1;`
       * @return Whether the name field is set.
       */
      public fun hasName(): kotlin.Boolean {
        return _builder.hasName()
      }

      /**
       * An uninstantiable, behaviorless type to represent the field in
       * generics.
       */
      @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      public class FeaturesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
      /**
       * ```
       * The actual features in this tile.
       * ```
       *
       * `repeated .vector_tile.Tile.Feature features = 2;`
       */
       public val features: com.google.protobuf.kotlin.DslList<vector_tile.VectorTile.Tile.Feature, FeaturesProxy>
        @kotlin.jvm.JvmSynthetic
        get() = com.google.protobuf.kotlin.DslList(
          _builder.featuresList
        )
      /**
       * ```
       * The actual features in this tile.
       * ```
       *
       * `repeated .vector_tile.Tile.Feature features = 2;`
       * @param value The features to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addFeatures")
      public fun com.google.protobuf.kotlin.DslList<vector_tile.VectorTile.Tile.Feature, FeaturesProxy>.add(value: vector_tile.VectorTile.Tile.Feature) {
        _builder.addFeatures(value)
      }
      /**
       * ```
       * The actual features in this tile.
       * ```
       *
       * `repeated .vector_tile.Tile.Feature features = 2;`
       * @param value The features to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignFeatures")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<vector_tile.VectorTile.Tile.Feature, FeaturesProxy>.plusAssign(value: vector_tile.VectorTile.Tile.Feature) {
        add(value)
      }
      /**
       * ```
       * The actual features in this tile.
       * ```
       *
       * `repeated .vector_tile.Tile.Feature features = 2;`
       * @param values The features to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addAllFeatures")
      public fun com.google.protobuf.kotlin.DslList<vector_tile.VectorTile.Tile.Feature, FeaturesProxy>.addAll(values: kotlin.collections.Iterable<vector_tile.VectorTile.Tile.Feature>) {
        _builder.addAllFeatures(values)
      }
      /**
       * ```
       * The actual features in this tile.
       * ```
       *
       * `repeated .vector_tile.Tile.Feature features = 2;`
       * @param values The features to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignAllFeatures")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<vector_tile.VectorTile.Tile.Feature, FeaturesProxy>.plusAssign(values: kotlin.collections.Iterable<vector_tile.VectorTile.Tile.Feature>) {
        addAll(values)
      }
      /**
       * ```
       * The actual features in this tile.
       * ```
       *
       * `repeated .vector_tile.Tile.Feature features = 2;`
       * @param index The index to set the value at.
       * @param value The features to set.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("setFeatures")
      public operator fun com.google.protobuf.kotlin.DslList<vector_tile.VectorTile.Tile.Feature, FeaturesProxy>.set(index: kotlin.Int, value: vector_tile.VectorTile.Tile.Feature) {
        _builder.setFeatures(index, value)
      }
      /**
       * ```
       * The actual features in this tile.
       * ```
       *
       * `repeated .vector_tile.Tile.Feature features = 2;`
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("clearFeatures")
      public fun com.google.protobuf.kotlin.DslList<vector_tile.VectorTile.Tile.Feature, FeaturesProxy>.clear() {
        _builder.clearFeatures()
      }


      /**
       * An uninstantiable, behaviorless type to represent the field in
       * generics.
       */
      @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      public class KeysProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
      /**
       * ```
       * Dictionary encoding for keys
       * ```
       *
       * `repeated string keys = 3;`
       * @return A list containing the keys.
       */
      public val keys: com.google.protobuf.kotlin.DslList<kotlin.String, KeysProxy>
        @kotlin.jvm.JvmSynthetic
        get() = com.google.protobuf.kotlin.DslList(
          _builder.keysList
        )
      /**
       * ```
       * Dictionary encoding for keys
       * ```
       *
       * `repeated string keys = 3;`
       * @param value The keys to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addKeys")
      public fun com.google.protobuf.kotlin.DslList<kotlin.String, KeysProxy>.add(value: kotlin.String) {
        _builder.addKeys(value)
      }
      /**
       * ```
       * Dictionary encoding for keys
       * ```
       *
       * `repeated string keys = 3;`
       * @param value The keys to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignKeys")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, KeysProxy>.plusAssign(value: kotlin.String) {
        add(value)
      }
      /**
       * ```
       * Dictionary encoding for keys
       * ```
       *
       * `repeated string keys = 3;`
       * @param values The keys to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addAllKeys")
      public fun com.google.protobuf.kotlin.DslList<kotlin.String, KeysProxy>.addAll(values: kotlin.collections.Iterable<kotlin.String>) {
        _builder.addAllKeys(values)
      }
      /**
       * ```
       * Dictionary encoding for keys
       * ```
       *
       * `repeated string keys = 3;`
       * @param values The keys to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignAllKeys")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, KeysProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.String>) {
        addAll(values)
      }
      /**
       * ```
       * Dictionary encoding for keys
       * ```
       *
       * `repeated string keys = 3;`
       * @param index The index to set the value at.
       * @param value The keys to set.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("setKeys")
      public operator fun com.google.protobuf.kotlin.DslList<kotlin.String, KeysProxy>.set(index: kotlin.Int, value: kotlin.String) {
        _builder.setKeys(index, value)
      }/**
       * ```
       * Dictionary encoding for keys
       * ```
       *
       * `repeated string keys = 3;`
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("clearKeys")
      public fun com.google.protobuf.kotlin.DslList<kotlin.String, KeysProxy>.clear() {
        _builder.clearKeys()
      }
      /**
       * An uninstantiable, behaviorless type to represent the field in
       * generics.
       */
      @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      public class ValuesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
      /**
       * ```
       * Dictionary encoding for values
       * ```
       *
       * `repeated .vector_tile.Tile.Value values = 4;`
       */
       public val values: com.google.protobuf.kotlin.DslList<vector_tile.VectorTile.Tile.Value, ValuesProxy>
        @kotlin.jvm.JvmSynthetic
        get() = com.google.protobuf.kotlin.DslList(
          _builder.valuesList
        )
      /**
       * ```
       * Dictionary encoding for values
       * ```
       *
       * `repeated .vector_tile.Tile.Value values = 4;`
       * @param value The values to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addValues")
      public fun com.google.protobuf.kotlin.DslList<vector_tile.VectorTile.Tile.Value, ValuesProxy>.add(value: vector_tile.VectorTile.Tile.Value) {
        _builder.addValues(value)
      }
      /**
       * ```
       * Dictionary encoding for values
       * ```
       *
       * `repeated .vector_tile.Tile.Value values = 4;`
       * @param value The values to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignValues")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<vector_tile.VectorTile.Tile.Value, ValuesProxy>.plusAssign(value: vector_tile.VectorTile.Tile.Value) {
        add(value)
      }
      /**
       * ```
       * Dictionary encoding for values
       * ```
       *
       * `repeated .vector_tile.Tile.Value values = 4;`
       * @param values The values to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addAllValues")
      public fun com.google.protobuf.kotlin.DslList<vector_tile.VectorTile.Tile.Value, ValuesProxy>.addAll(values: kotlin.collections.Iterable<vector_tile.VectorTile.Tile.Value>) {
        _builder.addAllValues(values)
      }
      /**
       * ```
       * Dictionary encoding for values
       * ```
       *
       * `repeated .vector_tile.Tile.Value values = 4;`
       * @param values The values to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignAllValues")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<vector_tile.VectorTile.Tile.Value, ValuesProxy>.plusAssign(values: kotlin.collections.Iterable<vector_tile.VectorTile.Tile.Value>) {
        addAll(values)
      }
      /**
       * ```
       * Dictionary encoding for values
       * ```
       *
       * `repeated .vector_tile.Tile.Value values = 4;`
       * @param index The index to set the value at.
       * @param value The values to set.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("setValues")
      public operator fun com.google.protobuf.kotlin.DslList<vector_tile.VectorTile.Tile.Value, ValuesProxy>.set(index: kotlin.Int, value: vector_tile.VectorTile.Tile.Value) {
        _builder.setValues(index, value)
      }
      /**
       * ```
       * Dictionary encoding for values
       * ```
       *
       * `repeated .vector_tile.Tile.Value values = 4;`
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("clearValues")
      public fun com.google.protobuf.kotlin.DslList<vector_tile.VectorTile.Tile.Value, ValuesProxy>.clear() {
        _builder.clearValues()
      }


      /**
       * ```
       * Although this is an "optional" field it is required by the specification.
       * See https://github.com/mapbox/vector-tile-spec/issues/47
       * ```
       *
       * `optional uint32 extent = 5 [default = 4096];`
       */
      public var extent: kotlin.Int
        @JvmName("getExtent")
        get() = _builder.extent
        @JvmName("setExtent")
        set(value) {
          _builder.extent = value
        }
      /**
       * ```
       * Although this is an "optional" field it is required by the specification.
       * See https://github.com/mapbox/vector-tile-spec/issues/47
       * ```
       *
       * `optional uint32 extent = 5 [default = 4096];`
       */
      public fun clearExtent() {
        _builder.clearExtent()
      }
      /**
       * ```
       * Although this is an "optional" field it is required by the specification.
       * See https://github.com/mapbox/vector-tile-spec/issues/47
       * ```
       *
       * `optional uint32 extent = 5 [default = 4096];`
       * @return Whether the extent field is set.
       */
      public fun hasExtent(): kotlin.Boolean {
        return _builder.hasExtent()
      }
      @Suppress("UNCHECKED_CAST")
      @kotlin.jvm.JvmSynthetic
public operator fun <T : kotlin.Any> get(extension: com.google.protobuf.ExtensionLite<vector_tile.VectorTile.Tile.Layer, T>): T {
        return if (extension.isRepeated) {
          get(extension as com.google.protobuf.ExtensionLite<vector_tile.VectorTile.Tile.Layer, kotlin.collections.List<*>>) as T
        } else {
          _builder.getExtension(extension)
        }
      }

      @kotlin.jvm.JvmSynthetic
@kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      @kotlin.jvm.JvmName("-getRepeatedExtension")
      public operator fun <E : kotlin.Any> get(
        extension: com.google.protobuf.ExtensionLite<vector_tile.VectorTile.Tile.Layer, kotlin.collections.List<E>>
      ): com.google.protobuf.kotlin.ExtensionList<E, vector_tile.VectorTile.Tile.Layer> {
        return com.google.protobuf.kotlin.ExtensionList(extension, _builder.getExtension(extension))
      }

      @kotlin.jvm.JvmSynthetic
public operator fun contains(extension: com.google.protobuf.ExtensionLite<vector_tile.VectorTile.Tile.Layer, *>): Boolean {
        return _builder.hasExtension(extension)
      }

      @kotlin.jvm.JvmSynthetic
public fun clear(extension: com.google.protobuf.ExtensionLite<vector_tile.VectorTile.Tile.Layer, *>) {
        _builder.clearExtension(extension)
      }

      @kotlin.jvm.JvmSynthetic
public fun <T : kotlin.Any> setExtension(extension: com.google.protobuf.ExtensionLite<vector_tile.VectorTile.Tile.Layer, T>, value: T) {
        _builder.setExtension(extension, value)
      }

      @kotlin.jvm.JvmSynthetic
@Suppress("NOTHING_TO_INLINE")
      public inline operator fun <T : Comparable<T>> set(
        extension: com.google.protobuf.ExtensionLite<vector_tile.VectorTile.Tile.Layer, T>,
        value: T
      ) {
        setExtension(extension, value)
      }

      @kotlin.jvm.JvmSynthetic
@Suppress("NOTHING_TO_INLINE")
      public inline operator fun set(
        extension: com.google.protobuf.ExtensionLite<vector_tile.VectorTile.Tile.Layer, com.google.protobuf.ByteString>,
        value: com.google.protobuf.ByteString
      ) {
        setExtension(extension, value)
      }

      @kotlin.jvm.JvmSynthetic
@Suppress("NOTHING_TO_INLINE")
      public inline operator fun <T : com.google.protobuf.MessageLite> set(
        extension: com.google.protobuf.ExtensionLite<vector_tile.VectorTile.Tile.Layer, T>,
        value: T
      ) {
        setExtension(extension, value)
      }

      @kotlin.jvm.JvmSynthetic
public fun <E : kotlin.Any> com.google.protobuf.kotlin.ExtensionList<E, vector_tile.VectorTile.Tile.Layer>.add(value: E) {
        _builder.addExtension(this.extension, value)
      }

      @kotlin.jvm.JvmSynthetic
@Suppress("NOTHING_TO_INLINE")
      public inline operator fun <E : kotlin.Any> com.google.protobuf.kotlin.ExtensionList<E, vector_tile.VectorTile.Tile.Layer>.plusAssign(value: E) {
        add(value)
      }

      @kotlin.jvm.JvmSynthetic
public fun <E : kotlin.Any> com.google.protobuf.kotlin.ExtensionList<E, vector_tile.VectorTile.Tile.Layer>.addAll(values: Iterable<E>) {
        for (value in values) {
          add(value)
        }
      }

      @kotlin.jvm.JvmSynthetic
@Suppress("NOTHING_TO_INLINE")
      public inline operator fun <E : kotlin.Any> com.google.protobuf.kotlin.ExtensionList<E, vector_tile.VectorTile.Tile.Layer>.plusAssign(values: Iterable<E>) {
        addAll(values)
      }

      @kotlin.jvm.JvmSynthetic
public operator fun <E : kotlin.Any> com.google.protobuf.kotlin.ExtensionList<E, vector_tile.VectorTile.Tile.Layer>.set(index: Int, value: E) {
        _builder.setExtension(this.extension, index, value)
      }

      @kotlin.jvm.JvmSynthetic
@Suppress("NOTHING_TO_INLINE")
      public inline fun com.google.protobuf.kotlin.ExtensionList<*, vector_tile.VectorTile.Tile.Layer>.clear() {
        clear(extension)
      }

    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun vector_tile.VectorTile.Tile.copy(block: `vector_tile`.TileKt.Dsl.() -> kotlin.Unit): vector_tile.VectorTile.Tile =
  `vector_tile`.TileKt.Dsl._create(this.toBuilder()).apply { block() }._build()

@kotlin.jvm.JvmSynthetic
public inline fun vector_tile.VectorTile.Tile.Value.copy(block: `vector_tile`.TileKt.ValueKt.Dsl.() -> kotlin.Unit): vector_tile.VectorTile.Tile.Value =
  `vector_tile`.TileKt.ValueKt.Dsl._create(this.toBuilder()).apply { block() }._build()

@kotlin.jvm.JvmSynthetic
public inline fun vector_tile.VectorTile.Tile.Feature.copy(block: `vector_tile`.TileKt.FeatureKt.Dsl.() -> kotlin.Unit): vector_tile.VectorTile.Tile.Feature =
  `vector_tile`.TileKt.FeatureKt.Dsl._create(this.toBuilder()).apply { block() }._build()

@kotlin.jvm.JvmSynthetic
public inline fun vector_tile.VectorTile.Tile.Layer.copy(block: `vector_tile`.TileKt.LayerKt.Dsl.() -> kotlin.Unit): vector_tile.VectorTile.Tile.Layer =
  `vector_tile`.TileKt.LayerKt.Dsl._create(this.toBuilder()).apply { block() }._build()

